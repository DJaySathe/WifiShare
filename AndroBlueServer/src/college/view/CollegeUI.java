/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CollegeUI.java
 *
 * Created on Oct 11, 2012, 7:09:31 AM
 */

package college.view;

import college.model.*;
import college.controls.model.*;
import college.database.*;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Insets;
import java.awt.Toolkit;

import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import master.servers.AppContextBuilder;
import master.servers.JettyFromMain;
import master.servers.NotiConn;
import master.servers.ThreadedDB;
import master.servers.ThreadedNOTIFIER;
import tools.ToolsUI;

/**
 *
 * @author STAR
 */
public class CollegeUI extends javax.swing.JFrame {

    /** Creates new form CollegeUI */
    public CollegeUI() {
        initSchedule();
        initTipsList();
        initStudentList();
        initLookAndFeel();
        initComponents();
        setCentered();
        redirectSystemStreams();
        initServers();
        initNoticeList();
        initMapsList();
        setTitle("WiFiShare College Server");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel8 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        messegeTextArea = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        consoleTextArea = new javax.swing.JTextArea();
        MAPS = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        studentList = new javax.swing.JList();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        bgrpoupTextField = new javax.swing.JTextField();
        phoneTextField = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        semesterTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        perTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        aggregateTextField = new javax.swing.JTextField();
        dobTextField = new javax.swing.JFormattedTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        noticeFilePathTextField = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tipList = new javax.swing.JList();
        jButton10 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        tipsTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        mapTextField = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        scheduleTable = new javax.swing.JTable();
        jButton15 = new javax.swing.JButton();
        scheduleTableAddRowTextField = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 14));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("NOTIFICATIONS");
        jLabel1.setToolTipText("please write the notification and click 'send' to send");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setText("Messege :");

        messegeTextArea.setColumns(20);
        messegeTextArea.setRows(5);
        messegeTextArea.setBorder(new javax.swing.border.MatteBorder(null));
        jScrollPane2.setViewportView(messegeTextArea);

        jButton2.setText("Send");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton18.setText("Clear");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 197, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton18)
                .addGap(51, 51, 51))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(321, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton18))
                .addGap(26, 26, 26))
        );

        jToolBar1.setFloatable(false);

        jButton1.setText("Start");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton6.setText("Stop");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton20.setText("Tools");
        jButton20.setFocusable(false);
        jButton20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton20.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton20);

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel12.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("CONSOLE");
        jLabel12.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        consoleTextArea.setColumns(20);
        consoleTextArea.setRows(5);
        jScrollPane11.setViewportView(consoleTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
            .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        studentList.setModel(studentListModel);
        studentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentListMouseClicked(evt);
            }
        });
        studentList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                studentListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(studentList);

        jLabel5.setText("Name");

        jLabel7.setText("Blood Group");

        jLabel8.setText("Address");

        jLabel9.setText("DOB");

        jLabel10.setText("Gender");

        jLabel11.setText("Phone");

        addressTextArea.setColumns(20);
        addressTextArea.setRows(5);
        jScrollPane4.setViewportView(addressTextArea);

        jLabel13.setText("Semester");

        jLabel14.setText("%");

        jLabel15.setText("Aggregate");

        dobTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        dobTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobTextFieldActionPerformed(evt);
            }
        });

        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Save");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Male");
        jRadioButton1.setActionCommand("Male");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Female");
        jRadioButton2.setActionCommand("Female");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(209, 209, 209)
                        .addComponent(jButton5)
                        .addGap(70, 70, 70))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGap(18, 18, 18))
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addGap(42, 42, 42)))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(36, 36, 36)))
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addComponent(aggregateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(200, 200, 200))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(semesterTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel14)
                                        .addGap(18, 18, 18)
                                        .addComponent(perTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(98, 98, 98))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(dobTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                            .addComponent(bgrpoupTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                            .addComponent(phoneTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                            .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
                                        .addGap(96, 96, 96))))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton2)
                                .addContainerGap())))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(bgrpoupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel8)))
                .addGap(39, 39, 39)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(semesterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(perTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(aggregateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jButton3)))
                .addGap(171, 171, 171)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(15, 15, 15))
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        MAPS.addTab("Student", jPanel2);

        jPanel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jButton11.setText("Browse");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Save");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel4.setText("File :");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(223, 223, 223)
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(noticeFilePathTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton11))
                    .addComponent(jLabel4))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noticeFilePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11))
                .addGap(18, 18, 18)
                .addComponent(jButton12)
                .addGap(434, 434, 434))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
        );

        MAPS.addTab("Notices", jPanel4);

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tipList.setModel(tipListModel);
        tipList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tipListMouseClicked(evt);
            }
        });
        tipList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                tipListValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(tipList);

        jButton10.setText("Delete");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton9.setText("Save");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel17.setText("Tip :");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(tipsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jButton10)
                .addContainerGap(771, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tipsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addComponent(jButton9))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jButton10)
                .addGap(43, 43, 43))
        );

        MAPS.addTab("Tips", jPanel6);

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jButton8.setText("Browse");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton16.setText("Save");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jLabel2.setText("File:");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mapTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton8)
                        .addGap(51, 51, 51))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(872, Short.MAX_VALUE))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mapTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addGap(34, 34, 34)
                .addComponent(jButton16)
                .addGap(427, 427, 427))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
        );

        MAPS.addTab("Maps", jPanel7);

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        scheduleTable.setModel(scheduleTableModel);
        jScrollPane5.setViewportView(scheduleTable);

        jButton15.setText("Save");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton17.setText("Add Rows");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton19.setText("Clear");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 894, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(scheduleTableAddRowTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 482, Short.MAX_VALUE)
                .addComponent(jButton15)
                .addGap(67, 67, 67))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton15)
                    .addComponent(scheduleTableAddRowTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton19)
                    .addComponent(jButton17))
                .addContainerGap(118, Short.MAX_VALUE))
        );

        MAPS.addTab("Timing", jPanel5);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1315, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MAPS)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(MAPS, 0, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



private void showMessage(String message) {
        final  JOptionPane dialog=new JOptionPane();
        dialog.showMessageDialog(null, message);
        ScheduledExecutorService s=Executors.newSingleThreadScheduledExecutor();
        s.schedule(new Runnable() {

            public void run() {
                dialog.setVisible(false);
            }
        }, 2, TimeUnit.SECONDS);
        dialog.setVisible(true);
    }

private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
    browseMap();
}//GEN-LAST:event_jButton8ActionPerformed

private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
    saveMap(evt);
}//GEN-LAST:event_jButton16ActionPerformed

private void tipListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tipListMouseClicked
//    setSelectedTip(evt);
}//GEN-LAST:event_tipListMouseClicked

private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
    // TODO add your handling code here:
    saveTip(evt);
}//GEN-LAST:event_jButton9ActionPerformed

private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
    // TODO add your handling code here:
    deleteTip(evt);
}//GEN-LAST:event_jButton10ActionPerformed

private void dobTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobTextFieldActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_dobTextFieldActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    // TODO add your handling code here:
    deleteStudent();
}//GEN-LAST:event_jButton3ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    addStudent();
}//GEN-LAST:event_jButton4ActionPerformed

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    // TODO add your handling code here:
    saveStudent();
}//GEN-LAST:event_jButton5ActionPerformed

private void studentListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentListMouseClicked
//    selectStudent();
}//GEN-LAST:event_studentListMouseClicked

private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
    // TODO add your handling code here:
    saveScheduleTable(evt);
}//GEN-LAST:event_jButton15ActionPerformed

private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
    // TODO add your handling code here:
    browseNotice(evt);
}//GEN-LAST:event_jButton11ActionPerformed

private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
    // TODO add your handling code here:
    addNotice(evt);
}//GEN-LAST:event_jButton12ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // TODO add your handling code here:
    sendMessege();
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
    // TODO add your handling code here:
    clearMessege();
}//GEN-LAST:event_jButton18ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    startServers(evt);
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    stopServers();
}//GEN-LAST:event_jButton6ActionPerformed

private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
    // TODO add your handling code here:
    initTools();
}//GEN-LAST:event_jButton20ActionPerformed

private void studentListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_studentListValueChanged
    selectStudent();
}//GEN-LAST:event_studentListValueChanged

private void tipListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_tipListValueChanged
    setSelectedTip();
}//GEN-LAST:event_tipListValueChanged

private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
    addRowToScheduleTable();
}//GEN-LAST:event_jButton17ActionPerformed

private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
    clearScheduleTable();
}//GEN-LAST:event_jButton19ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CollegeUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane MAPS;
    private javax.swing.JTextArea addressTextArea;
    private javax.swing.JTextField aggregateTextField;
    private javax.swing.JTextField bgrpoupTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextArea consoleTextArea;
    private javax.swing.JFormattedTextField dobTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField mapTextField;
    private javax.swing.JTextArea messegeTextArea;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField noticeFilePathTextField;
    private javax.swing.JTextField perTextField;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JTable scheduleTable;
    private javax.swing.JTextField scheduleTableAddRowTextField;
    private javax.swing.JTextField semesterTextField;
    private javax.swing.JList studentList;
    private javax.swing.JList tipList;
    private javax.swing.JTextField tipsTextField;
    // End of variables declaration//GEN-END:variables

   private TipListModel tipListModel;
    private TipModel selectedtip;
    private ArrayList<TipModel> tipModels;

    private MapListModel mapListModel;
    private MapModel selectedMap;
    private ArrayList<MapModel> mapModels;
    private File mapSourceFile;
    final private String DESTINATION_PATH="c:\\";
    final private String DEFAULT_PATH="C:\\Documents and Settings\\All Users\\Documents\\My Pictures\\Sample Pictures\\1.jpg";
    private static String mapPath;
    private static String dirPath;
    public static String getMapPath() {
        return mapPath;
    }

    public static void setMapPath(String mapPath1) {
        mapPath = mapPath1;
    }

    public static String getDirPath() {
        return dirPath;
    }

    public static void setDirPath(String dirPath1) {
        dirPath = dirPath1;
    }

    private void initMapsList() {
        //        System.out.println("This ="+mapPath);
        mapPath = AppContextBuilder.getDirPath();
        String mainPath = mapPath.substring(mapPath.indexOf(":") + 2, mapPath.lastIndexOf("/") + 1);
        mainPath = mainPath.replaceAll("%20", " ");
//        System.out.println("This ="+mainPath);
        dirPath=mainPath+"page/";
        dirPath=dirPath.replaceAll("/","\\\\");
        mapPath=dirPath+"college_map.jpg";
//        System.out.println("this="+mapPath);
        mapSourceFile=new File(mapPath);
    }

    private void initTipsList() {
        tipModels=GetTip.getPatientList();
        tipListModel=new TipListModel(tipModels);
    }
    
    private void saveTip(ActionEvent evt) {
        TipModel tm=new TipModel(tipsTextField.getText());
        AddTip.addTip(tm);
        flushTipsTextField();
        refreshTipsList();
        showMessage("Saved");
    }

    private void refreshTipsList() {
        tipModels=GetTip.getPatientList();
        tipListModel=new TipListModel(tipModels);
        tipList.setModel(tipListModel);
    }

    private void flushTipsTextField() {
        tipsTextField.setText("");
    }

    private void setSelectedTip() {
        selectedtip=(TipModel) tipList.getSelectedValue();
    }

    private void deleteTip(ActionEvent evt) {
        DeleteTip.deleteTip(selectedtip);
        refreshTipsList();
        showMessage("Deleted");
    }

    private void browseMap() {
        JFileChooser chooser=new JFileChooser();
        chooser.showOpenDialog(null);
        mapSourceFile=chooser.getSelectedFile();
        mapTextField.setText(mapSourceFile.getAbsolutePath());
    }

    private void saveMap(ActionEvent evt) {
       FileInputStream fis = null;
        FileOutputStream fos=null;
        try {
            File dir = new File(dirPath + "college_map.jpg");
            fis = new FileInputStream(mapSourceFile);
            byte[] b = new byte[fis.available()];
            fis.read(b);
            fos=new FileOutputStream(dir);
            fos.write(b);
            showMessage("Saved");
        } catch (Exception ex) {
            Logger.getLogger(CollegeUI.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fos.close();
                fis.close();
            } catch (Exception ex) {
                Logger.getLogger(CollegeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

//    private void addMap(ActionEvent evt) {
//        File dir=new File(DESTINATION_PATH);
//        mapSourceFile.renameTo(new File(dir,floorNameTextField.getText()));
//        AddMap.addMap(new MapModel(floorNameTextField.getText()));
//        flushMapTextFields();
//        refreshMapList();
//        showMessage("Added");
//    }

//    private void deleteMap(ActionEvent evt) {
////        DeleteMap.deleteMap(selectedMap);
////        refreshMapList();
//    }
//
//    private void refreshMapList() {
////        mapModels=GetMap.getMapList();
////        mapListModel=new MapListModel(mapModels);
////        mapList.setModel(mapListModel);
//    }
//
//    private void setSelectedMap(MouseEvent evt) {
////        selectedMap=(MapModel) mapList.getSelectedValue();
////        floorNameTextField.setText(selectedMap.getFloorName());
////        mapTextField.setText(mapSourceFile.getAbsolutePath());
//    }

//    private void flushMapTextFields() {
//        mapTextField.setText("");
//        floorNameTextField.setText("");
//    }

    private void initLookAndFeel() {
       try{
        //UIManager.setLookAndFeel(ch.randelshofer.quaqua.QuaquaManager.getLookAndFeel());
        //UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
           UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
       }
       catch(Exception e)
       {
           e.printStackTrace();
       }
    }
private void setCentered() {
                Toolkit kit = getToolkit();
                GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
                GraphicsDevice[] gs = ge.getScreenDevices();
                Insets in = kit.getScreenInsets(gs[0].getDefaultConfiguration());

                Dimension d = kit.getScreenSize();
                int max_width = (d.width - in.left - in.right);
                int max_height = (d.height - in.top - in.bottom);
                setSize(Math.min(max_width, 2756), Math.min(max_height, 679));//whatever size you want but smaller the insets
                setLocation((int) (max_width - getWidth()) / 2, (int) (max_height - getHeight() ) / 2);
    }

    private StudentListModel studentListModel;
    private ArrayList<StudentModel> studentModels;
    private StudentModel selectedStudent;

    private void initStudentList() {
        studentModels=GetStudentList.getList();
        studentListModel=new StudentListModel(studentModels);
    }

    private void addStudent() {
        StudentModel model = getEnteredStudent();
        refreshStudentList();
        boolean b=AddStudent.addStudent(model);

        if(b)
            showMessage("Student Added.");
        else
            showMessage("Operation Failed.");

    }

    private StudentModel getEnteredStudent()
    {
            StudentModel model=new StudentModel();
            model.setAddress(addressTextArea.getText());
            model.setAggregate(Double.parseDouble(aggregateTextField.getText()));
            model.setBloodgroup(bgrpoupTextField.getText());
            model.setDob((Date)dobTextField.getValue());
            model.setGender(buttonGroup1.getSelection().getActionCommand());
            model.setId(0);
            model.setName(nameTextField.getText());
            model.setPercentage(Double.parseDouble(perTextField.getText()));
            model.setPhone(phoneTextField.getText());
            model.setSemester(semesterTextField.getText());
            return model;
    }

    private void saveStudent() {
        StudentModel enteredStudent = getEnteredStudent();
        boolean b=UpdateStudent.saveStudent(selectedStudent,enteredStudent);
        if(b)
            showMessage("Student information updated.");
        else
            showMessage("Operation failed");
        refreshStudentList();
    }

    private void deleteStudent() {
        boolean b=DeleteStudent.delete(selectedStudent);
        refreshStudentList();
        if(b)
            showMessage("Student Deleted");
        else
            showMessage("Operation Failed");
    }

    private void selectStudent() {
        selectedStudent=(StudentModel)studentList.getSelectedValue();
        setTextFields();
    }

    private void setTextFields() {
        nameTextField.setText(selectedStudent.getName());
        bgrpoupTextField.setText(selectedStudent.getBloodgroup());
        dobTextField.setValue(selectedStudent.getDob());
//        genderTextField.setText(selectedStudent.getGender());
        if(selectedStudent.getGender().equals("Male"))
        {
            jRadioButton1.setSelected(true);
            //jRadioButton2.setEnabled(false);
        }
        else
        {
            jRadioButton2.setSelected(true);
           // jRadioButton1.setEnabled(false);

        }
        phoneTextField.setText(selectedStudent.getPhone());
        addressTextArea.setText(selectedStudent.getAddress());
        semesterTextField.setText(selectedStudent.getSemester());
        perTextField.setText(selectedStudent.getPercentage()+"");
        aggregateTextField.setText(selectedStudent.getAggregate()+"");
    }
    private void flushTextFields()
    {
        nameTextField.setText("");
        bgrpoupTextField.setText("");
        dobTextField.setText("");
//        genderTextField.setText("");
        buttonGroup1.clearSelection();
        phoneTextField.setText("");
        addressTextArea.setText("");
        semesterTextField.setText("");
        perTextField.setText("");
        aggregateTextField.setText("");
    }

    private void refreshStudentList() {
        ArrayList<StudentModel> list = GetStudentList.getList();
        StudentListModel listModel=new StudentListModel(list);
        studentList.setModel(listModel);
    }

      private ScheduleTableModel scheduleTableModel;
      private ScheduleModel scheduleModel;
      private ArrayList<ScheduleModel> scheduleModels;

    private void initSchedule() {
        scheduleModels=GetScheduleTable.getScheduleTableList();
        scheduleTableModel=new ScheduleTableModel(scheduleModels);

    }
    private void saveScheduleTable(ActionEvent evt) {
        ScheduleTableModel model = (ScheduleTableModel) scheduleTable.getModel();
        scheduleModels=model.getList();
        SaveScheduleTable.saveScheduleTable(scheduleModels);
        showMessage("Saved");
    }


    private NoticeListModel noticeListModel;
    private NoticeModel selectedNotice;
    private ArrayList<NoticeModel> noticeModels;
    private File noticeSourceFile;
//    final private String DESTINATION_PATH="c:\\";
//    final private String DEFAULT_PATH="C:\\Documents and Settings\\All Users\\Documents\\My Pictures\\Sample Pictures\\1.jpg";




    private void browseNotice(ActionEvent evt) {
        JFileChooser chooser=new JFileChooser();
        chooser.showOpenDialog(null);
        noticeSourceFile=chooser.getSelectedFile();
        noticeFilePathTextField.setText(noticeSourceFile.getAbsolutePath());
    }

//    private void selectedNotice(MouseEvent evt) {
//        selectedNotice=(NoticeModel)noticeList.getSelectedValue();
//        noticeSubjectTextField.setText(selectedNotice.getSubject());
//        noticeFilePathTextField.setText(noticeSourceFile.getAbsolutePath());
//    }
//
    private void addNotice(ActionEvent evt) {
       FileInputStream fis = null;
        FileOutputStream fos=null;
        try {
            File dir = new File(dirPath + "college_notice.jpg");
            fis = new FileInputStream(noticeSourceFile);
            byte[] b = new byte[fis.available()];
            fis.read(b);
            fos=new FileOutputStream(dir);
            fos.write(b);
            showMessage("Saved");
        } catch (Exception ex) {
            Logger.getLogger(CollegeUI.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fos.close();
                fis.close();
            } catch (Exception ex) {
                Logger.getLogger(CollegeUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
//
//    private void deleteNotice() {
//        DeleteNotice.deleteNotice(selectedNotice);
//        refreshNoticeList();
//    }
//
//    private void flushNoticeTextFields() {
//        noticeSubjectTextField.setText("");
//        noticeFilePathTextField.setText("");
//    }

    private void initNoticeList() {
//        noticeModels=GetNotice.getNoticeList();
//        noticeListModel=new NoticeListModel(noticeModels);
//        noticeSourceFile=new File(DEFAULT_PATH);
    }

    private void refreshNoticeList() {
//        noticeModels=GetNotice.getNoticeList();
//        noticeListModel=new NoticeListModel(noticeModels);
//        noticeList.setModel(noticeListModel);
    }

    private void sendMessege() {
        String text = messegeTextArea.getText();
        NotiConn.setS(text);
    }

    private void clearMessege() {
        NotiConn.setS("HI");
        messegeTextArea.setText("");
    }
    

    private static ThreadedNOTIFIER threadedNOTIFIER;
    private static ThreadedDB threadedDB;
    private JettyFromMain jettyFromMain;
    private boolean  flag =false;
    private void initServers() {
        threadedNOTIFIER = new ThreadedNOTIFIER("first");
        threadedDB = new ThreadedDB("secound");
        jettyFromMain=new JettyFromMain();
    }
    private boolean started=false;
    private void startServers(ActionEvent evt) {
        try {
           if(!started)
           {
                if(!flag)
                {
                    System.out.println("Starting first time... \n");
                    threadedNOTIFIER.start();
                    threadedDB.start();
                    flag=true;
                }
                else
                {
                    System.out.println("Starting Again... \n");
                    threadedNOTIFIER=new ThreadedNOTIFIER("first");
                    threadedNOTIFIER.start();
                    threadedDB=new ThreadedDB("secound");
                    threadedDB.start();

                }
                jettyFromMain.getJettyServer().start();
                started=true;
          }
           else
           {
               System.out.println("Already Started.");
           }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    private void stopServers() {
        try {
            if(started)
            {
                System.out.println("Stopping...");
                ThreadedDB.closeListener();
                threadedDB.stop();
                threadedDB= null;
                ThreadedNOTIFIER.closeListener();
                threadedNOTIFIER.stop();
                threadedNOTIFIER= null;
                jettyFromMain.getJettyServer().stop();
                started=false;
            }
        } catch (Exception e) {
//            e.printStackTrace();
        }


    }

    public static ThreadedDB getThreadedDB() {
        return threadedDB;
    }

    public static ThreadedNOTIFIER getThreadedNOTIFIER() {
        return threadedNOTIFIER;
    }

    private void redirectSystemStreams() {
  OutputStream out = new OutputStream() {
    @Override
    public void write(int b) throws IOException {
      updateTextArea(String.valueOf((char) b));
    }

    @Override
    public void write(byte[] b, int off, int len) throws IOException {
      updateTextArea(new String(b, off, len));
    }

    @Override
    public void write(byte[] b) throws IOException {
      write(b, 0, b.length);
    }
  };

  System.setOut(new PrintStream(out, true));
//  System.setErr(new PrintStream(out, true));
}
    private void updateTextArea(final String text) {
  SwingUtilities.invokeLater(new Runnable() {
    public void run() {
      consoleTextArea.append(text);
    }
  });
}
    private void initTools() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ToolsUI().setVisible(true);
            }
        });
    }

    private void addRowToScheduleTable() {
        try {
            ScheduleTableModel model = (ScheduleTableModel)scheduleTable.getModel();
        model.insertRow(Integer.parseInt(scheduleTableAddRowTextField.getText()));
        ArrayList<ScheduleModel> list = model.getList();
        ScheduleTableModel model1=new ScheduleTableModel(list);
        scheduleTable.setModel(model1);
        } catch (Exception e) {
        }
    }
    private void clearScheduleTable() {
        ScheduleTableModel model = (ScheduleTableModel)scheduleTable.getModel();
        model.deleteAll();
        ArrayList<ScheduleModel> list = model.getList();
        ScheduleTableModel model1=new ScheduleTableModel(list);
        scheduleTable.setModel(model1);
    }
}
