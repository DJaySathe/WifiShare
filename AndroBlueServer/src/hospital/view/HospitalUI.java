/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HospitalUI.java
 *
 * Created on Oct 11, 2012, 4:11:13 AM
 */

package hospital.view;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import hospital.controls.model.MapListModel;
import hospital.controls.model.PatientListModel;
import hospital.controls.model.PrescriptionListModel;
import hospital.controls.model.PrescriptionTableModel;
import hospital.controls.model.ScheduleTableModel;
import hospital.controls.model.TipListModel;
import hospital.database.AddMap;
import hospital.database.AddPrescription;
import hospital.database.AddTip;
import hospital.database.DeleteMap;
import hospital.database.DeletePatient;
import hospital.database.DeleteTip;
import hospital.database.GetMap;
import hospital.database.GetPatient;
import hospital.database.GetPrescription;
import hospital.database.GetPrescriptionList;
import hospital.database.GetScheduleTable;
import hospital.database.GetTip;
import hospital.database.SavePrescriptionTable;
import hospital.database.SaveScheduleTable;
import hospital.database.SetPatient;
import hospital.database.UpdateMap;
import hospital.database.UpdatePatient;
import hospital.model.MapModel;
import hospital.model.PrescriptionModel;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import hospital.model.PatientModel;
import hospital.model.ScheduleModel;
import hospital.model.TipModel;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Insets;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.Date;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.TableModel;
import master.servers.JettyFromMain;
import master.servers.ThreadedDB;
import master.servers.ThreadedNOTIFIER;
import master.servers.NotiConn;
import tools.ToolsUI;

/**
 *
 * @author STAR
 */
public class HospitalUI extends javax.swing.JFrame {

    /** Creates new form HospitalUI */
    public HospitalUI() {
        initPatientList();
        initPatientListP();
        initTipsList();
        initSchedule();
        setCentered();
        initLookAndFeel();
        initComponents();
        initServers();
        initMapsList();
        redirectSystemStreams();
        setTitle("WiFiShare Hospital Server");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private static int port = 8000, maxConnections = 0;
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel8 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        consoleTextArea = new javax.swing.JTextArea();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        prescriptionTab = new javax.swing.JTabbedPane();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        pnameTextField1 = new javax.swing.JTextField();
        pbGroupTextField1 = new javax.swing.JTextField();
        pphoneTextField1 = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        paddressTextField1 = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cunFeeTextField = new javax.swing.JTextField();
        opExpTextField = new javax.swing.JTextField();
        medExpTextField = new javax.swing.JTextField();
        pdobTextField = new javax.swing.JFormattedTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        patientList = new javax.swing.JList();
        jButton11 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        patientListP = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        priscriptionTable = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        prescriptionList = new javax.swing.JList();
        jButton14 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        prescriptionAddRowTextField = new javax.swing.JTextField();
        jButton18 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        scheduleTable = new javax.swing.JTable();
        SAVE = new javax.swing.JButton();
        scheduleTableAddRowTextField = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tipList = new javax.swing.JList();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        tipsTextField = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        mapTextField = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        messegeTextArea = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();

        jScrollPane1.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(236, 233, 202));

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel12.setFont(new java.awt.Font("Arial Black", 1, 14));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("CONSOLE");
        jLabel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        consoleTextArea.setColumns(20);
        consoleTextArea.setRows(5);
        jScrollPane11.setViewportView(consoleTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addContainerGap())
        );

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setText("Start");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton6.setText("Stop");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton20.setText("Tools");
        jButton20.setFocusable(false);
        jButton20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton20.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton20);

        jPanel13.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jButton12.setText("Add");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Save");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel6.setText("Name");

        jLabel13.setText("Blood Group");

        jLabel15.setText("Address");

        jLabel16.setText("DOB");

        jLabel17.setText("Gender");

        jLabel18.setText("Phone");

        pnameTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pnameTextField1ActionPerformed(evt);
            }
        });

        paddressTextField1.setColumns(20);
        paddressTextField1.setRows(5);
        jScrollPane8.setViewportView(paddressTextField1);

        jLabel19.setText("Consultation Fees");

        jLabel20.setText("Opration Expenses");

        jLabel21.setText("Medicine Expenses");

        pdobTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        pdobTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdobTextFieldActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Male");
        jRadioButton1.setActionCommand("Male");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Female");
        jRadioButton2.setActionCommand("Female");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19))
                        .addGap(36, 36, 36))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pbGroupTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(pphoneTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(pnameTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(cunFeeTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(opExpTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(medExpTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(pdobTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                        .addGap(112, 112, 112))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2)
                        .addGap(199, 199, 199))))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pnameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(12, 12, 12)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pbGroupTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(pdobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(pphoneTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(cunFeeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(opExpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(medExpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jButton12))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        patientList.setModel(patientListModel);
        patientList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientListMouseClicked(evt);
            }
        });
        patientList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                patientListValueChanged(evt);
            }
        });
        jScrollPane9.setViewportView(patientList);

        jButton11.setText("Delete");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jButton11)
                .addContainerGap(747, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(38, 38, 38))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addComponent(jButton11)
                .addContainerGap())
        );

        prescriptionTab.addTab("Patient", jPanel13);

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        patientListP.setModel(patientListModel);
        patientListP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientListPMouseClicked(evt);
            }
        });
        patientListP.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                patientListPValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(patientListP);

        jScrollPane4.setViewportView(priscriptionTable);

        jButton5.setText("Save");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        prescriptionList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prescriptionListMouseClicked(evt);
            }
        });
        prescriptionList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                prescriptionListValueChanged(evt);
            }
        });
        jScrollPane10.setViewportView(prescriptionList);

        jButton14.setText("Add Prescription");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton16.setText("Add Row");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        prescriptionAddRowTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescriptionAddRowTextFieldActionPerformed(evt);
            }
        });

        jButton18.setText("Clear");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton18)
                            .addComponent(jButton14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(prescriptionAddRowTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton16)))
                        .addGap(43, 43, 43))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton16)
                            .addComponent(prescriptionAddRowTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton14)
                            .addComponent(jButton5))
                        .addGap(34, 34, 34))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE))
                .addContainerGap())
        );

        prescriptionTab.addTab("Prescription", jPanel4);

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel14.setText("Timing Schedule");

        scheduleTable.setModel(scheduleTableModel);
        jScrollPane5.setViewportView(scheduleTable);

        SAVE.setText("Save");
        SAVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAVEActionPerformed(evt);
            }
        });

        jButton17.setText("Add Rows");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton19.setText("Clear");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 636, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(scheduleTableAddRowTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton17)
                                .addGap(30, 30, 30)
                                .addComponent(jButton19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 349, Short.MAX_VALUE)
                                .addComponent(SAVE, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(155, 155, 155))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SAVE)
                    .addComponent(scheduleTableAddRowTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton17)
                    .addComponent(jButton19))
                .addGap(175, 175, 175))
        );

        prescriptionTab.addTab("Schedule", jPanel5);

        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tipList.setModel(tipListModel);
        tipList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tipListMouseClicked(evt);
            }
        });
        tipList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                tipListValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(tipList);

        jButton9.setText("Save");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Delete");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(tipsTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE))
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jButton10)
                .addContainerGap(745, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(tipsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jButton9))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        prescriptionTab.addTab("Tips", jPanel6);

        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));

        jButton7.setText("Browse");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Save");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel2.setText("Change Map :");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel2)
                .addGap(112, 112, 112)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(mapTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addGap(60, 60, 60))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mapTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8)
                .addContainerGap(375, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        prescriptionTab.addTab("Maps", jPanel7);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 14));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("NOTIFICATIONS");
        jLabel1.setToolTipText("please write the notification and click 'send' to send");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setText("Messege :");

        messegeTextArea.setColumns(20);
        messegeTextArea.setRows(5);
        messegeTextArea.setBorder(new javax.swing.border.MatteBorder(null));
        jScrollPane2.setViewportView(messegeTextArea);

        jButton2.setText("Send");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton15.setText("Clear");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(275, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 166, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton15)
                        .addGap(26, 26, 26))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton15))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1255, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prescriptionTab, javax.swing.GroupLayout.PREFERRED_SIZE, 909, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prescriptionTab, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1283)/2, (screenSize.height-689)/2, 1283, 689);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        sendMessege();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        deletePatient();
}//GEN-LAST:event_jButton11ActionPerformed

    private void pnameTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnameTextField1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_pnameTextField1ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
// TODO add your handling code here:
        addPatient(evt);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void pdobTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdobTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pdobTextFieldActionPerformed

    private void patientListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientListMouseClicked
        // TODO add your handling code here:
        selectPatient(evt);
    }//GEN-LAST:event_patientListMouseClicked

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        savePatient(evt);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        saveTip(evt);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void tipListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tipListMouseClicked
        // TODO add your handling code here:
        setSelectedTip(evt);
    }//GEN-LAST:event_tipListMouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        deleteTip(evt);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        browseMap();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        saveMap(evt);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void SAVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAVEActionPerformed
        // TODO add your handling code here:
        saveScheduleTable(evt);
    }//GEN-LAST:event_SAVEActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        addPrescription(evt);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        addPriscriptionTable(evt);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void patientListPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientListPMouseClicked
        // TODO add your handling code here:
        selectPatientP(evt);
    }//GEN-LAST:event_patientListPMouseClicked

    private void prescriptionListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prescriptionListMouseClicked
        // TODO add your handling code here:
        showPriscription(evt);
    }//GEN-LAST:event_prescriptionListMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        startServers(evt);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        stopServers();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void patientListPValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_patientListPValueChanged
        // TODO add your handling code here:
        selectPatientP(null);
    }//GEN-LAST:event_patientListPValueChanged

    private void prescriptionListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_prescriptionListValueChanged
        // TODO add your handling code here:
        showPriscription(null);
    }//GEN-LAST:event_prescriptionListValueChanged

    private void patientListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_patientListValueChanged
        // TODO add your handling code here:
        selectPatient(null);
    }//GEN-LAST:event_patientListValueChanged

    private void tipListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_tipListValueChanged
        // TODO add your handling code here:
        setSelectedTip(null);
    }//GEN-LAST:event_tipListValueChanged

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        clearMessege();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        addRowToPrescriptionTable();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void prescriptionAddRowTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescriptionAddRowTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prescriptionAddRowTextFieldActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        addRowToScheduleTable();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        clearPrescriptiontable();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        clearScheduleTable();
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        initTools();
    }//GEN-LAST:event_jButton20ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HospitalUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SAVE;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextArea consoleTextArea;
    private javax.swing.JTextField cunFeeTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField mapTextField;
    private javax.swing.JTextField medExpTextField;
    private javax.swing.JTextArea messegeTextArea;
    private javax.swing.JTextField opExpTextField;
    private javax.swing.JTextArea paddressTextField1;
    private javax.swing.JList patientList;
    private javax.swing.JList patientListP;
    private javax.swing.JTextField pbGroupTextField1;
    private javax.swing.JFormattedTextField pdobTextField;
    private javax.swing.JTextField pnameTextField1;
    private javax.swing.JTextField pphoneTextField1;
    private javax.swing.JTextField prescriptionAddRowTextField;
    private javax.swing.JList prescriptionList;
    private javax.swing.JTabbedPane prescriptionTab;
    private javax.swing.JTable priscriptionTable;
    private javax.swing.JTable scheduleTable;
    private javax.swing.JTextField scheduleTableAddRowTextField;
    private javax.swing.JList tipList;
    private javax.swing.JTextField tipsTextField;
    // End of variables declaration//GEN-END:variables

    private ArrayList<PatientModel> patientModels;
    private PatientListModel patientListModel;
    private PatientModel selectedPatient;

    private TipListModel tipListModel;
    private TipModel selectedtip;
    private ArrayList<TipModel> tipModels;

//    private MapListModel mapListModel;
    private MapModel selectedMap;
//    private ArrayList<MapModel> mapModels;
    private File mapSourceFile;
//    final private String DESTINATION_PATH="c:\\";
//    final private String DEFAULT_PATH="C:\\Documents and Settings\\All Users\\Documents\\My Pictures\\Sample Pictures\\1.jpg";
    private static String mapPath;
    private static String dirPath;
    private ScheduleTableModel scheduleTableModel;
//    private ScheduleModel scheduleModel;
    private ArrayList<ScheduleModel> scheduleModels;

    public static String getMapPath() {
        return mapPath;
    }

    public static void setMapPath(String mapPath1) {
        mapPath = mapPath1;
    }

    public static String getDirPath() {
        return dirPath;
    }

    public static void setDirPath(String dirPath) {
        HospitalUI.dirPath = dirPath;
    }

    


    private void initPatientList() {
        patientModels=GetPatient.getPatientList();
        patientListModel=new PatientListModel(patientModels);
    }

    

    private void initMapsList() {
//        System.out.println("This ="+mapPath);
        String mainPath = mapPath.substring(mapPath.indexOf(":") + 2, mapPath.lastIndexOf("/") + 1);
        mainPath = mainPath.replaceAll("%20", " ");
//        System.out.println("This ="+mainPath);
        dirPath=mainPath+"page/";
        dirPath=dirPath.replaceAll("/","\\\\");
        mapPath=dirPath+"hospital_map.jpg";
//        System.out.println("this="+mapPath);
        mapSourceFile=new File(mapPath);
    }

    private void initTipsList() {
        tipModels=GetTip.getPatientList();
        tipListModel=new TipListModel(tipModels);
    }

    private void initSchedule() {
        scheduleModels=GetScheduleTable.getScheduleTableList();
        scheduleTableModel=new ScheduleTableModel(scheduleModels);
    }

    private void addPatient(ActionEvent evt) {
        PatientModel model=new PatientModel(0, pnameTextField1.getText(), pphoneTextField1.getText(), paddressTextField1.getText(), buttonGroup1.getSelection().getActionCommand(), pbGroupTextField1.getText(),(Date)pdobTextField.getValue(), Integer.parseInt(cunFeeTextField.getText()), Integer.parseInt(medExpTextField.getText()), Integer.parseInt(opExpTextField.getText()));
        SetPatient.setPatient(model);
        flushFields();
        refreshList();
        showMessage("Added");
    }

    private void selectPatient(MouseEvent evt) {
        selectedPatient=(PatientModel) patientList.getSelectedValue();
        setTextFields();
    }

    private void savePatient(ActionEvent evt) {
        PatientModel newPatientValue=new PatientModel(0, pnameTextField1.getText(), pphoneTextField1.getText(), paddressTextField1.getText(), buttonGroup1.getSelection().getActionCommand(), pbGroupTextField1.getText(),(Date)pdobTextField.getValue(), Integer.parseInt(cunFeeTextField.getText()), Integer.parseInt(medExpTextField.getText()), Integer.parseInt(opExpTextField.getText()));
        UpdatePatient.updatePatient(selectedPatient, newPatientValue);
        refreshList();
        flushFields();
        showMessage("Saved");
    }

    private void refreshList() {
        patientModels=GetPatient.getPatientList();
        patientListModel=new PatientListModel(patientModels);
        patientListP.setModel(patientListModel);
        patientList.setModel(patientListModel);
    }

    private void flushFields() {
        pnameTextField1.setText("");
        pphoneTextField1.setText("");
        paddressTextField1.setText("");
//        pgenderTextField1.setText("");
        buttonGroup1.clearSelection();
        pbGroupTextField1.setText("");
        pdobTextField.setText("");
        cunFeeTextField.setText("");
        medExpTextField.setText("");
        opExpTextField.setText("");
    }

    private void showMessage(String message) {
        final  JOptionPane dialog=new JOptionPane();
        dialog.showMessageDialog(null, message);
        ScheduledExecutorService s=Executors.newSingleThreadScheduledExecutor();
        s.schedule(new Runnable() {

            public void run() {
                dialog.setVisible(false);
            }
        }, 2, TimeUnit.SECONDS);
        dialog.setVisible(true);
    }

    private void deletePatient() {
        DeletePatient.deletePatient(selectedPatient);
        refreshList();
        showMessage("Deleted");
    }

    private void setTextFields() {
        pnameTextField1.setText(selectedPatient.getName());
        pphoneTextField1.setText(selectedPatient.getPhone());
        paddressTextField1.setText(selectedPatient.getAddress());
//        pgenderTextField1.setText(selectedPatient.getGender());
        if(selectedPatient.getGender().equals("Male"))
        {
            jRadioButton1.setSelected(true);
            //jRadioButton2.setEnabled(false);
        }
        else
        {
            jRadioButton2.setSelected(true);
           // jRadioButton1.setEnabled(false);

        }
        pbGroupTextField1.setText(selectedPatient.getBloodgroup());
        pdobTextField.setValue(selectedPatient.getDob());
        cunFeeTextField.setText(selectedPatient.getCunFee()+"");
        medExpTextField.setText(selectedPatient.getOpExp()+"");
        opExpTextField.setText(selectedPatient.getMedExp()+"");
    }

    private void saveTip(ActionEvent evt) {
        TipModel tm=new TipModel(tipsTextField.getText());
        AddTip.addTip(tm);
        flushTipsTextField();
        refreshTipsList();
        showMessage("Saved");
    }

    private void refreshTipsList() {
        tipModels=GetTip.getPatientList();
        tipListModel=new TipListModel(tipModels);
        tipList.setModel(tipListModel);
    }

    private void flushTipsTextField() {
        tipsTextField.setText("");
    }

    private void setSelectedTip(MouseEvent evt) {
        selectedtip=(TipModel) tipList.getSelectedValue();
    }

    private void deleteTip(ActionEvent evt) {
        DeleteTip.deleteTip(selectedtip);
        refreshTipsList();
        showMessage("Deleted");
    }

    private void browseMap() {
        JFileChooser chooser=new JFileChooser();
        chooser.showOpenDialog(null);
        mapSourceFile=chooser.getSelectedFile();
        mapTextField.setText(mapSourceFile.getAbsolutePath());
    }

    private void saveMap(ActionEvent evt) {
        FileInputStream fis = null;
        FileOutputStream fos=null;
        try {
            File dir = new File(dirPath + "hopspital_map.jpg");
            fis = new FileInputStream(mapSourceFile);
            byte[] b = new byte[fis.available()];
            fis.read(b);
            fos=new FileOutputStream(dir);
            fos.write(b);
            showMessage("Saved");
        } catch (Exception ex) {
            Logger.getLogger(HospitalUI.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fos.close();
                fis.close();
            } catch (Exception ex) {
                Logger.getLogger(HospitalUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }
    private void addMap(ActionEvent evt) {
//        File dir=new File(DESTINATION_PATH);
//        mapSourceFile.renameTo(new File(dir,floorNameTextField.getText()));
//        AddMap.addMap(new MapModel(floorNameTextField.getText()));
//        flushMapTextFields();
//        refreshMapList();
//        showMessage("Added");
    }

    private void deleteMap(ActionEvent evt) {
        DeleteMap.deleteMap(selectedMap);
        refreshMapList();
    }

    private void refreshMapList() {
//        mapModels=GetMap.getMapList();
//        mapListModel=new MapListModel(mapModels);
//        mapList.setModel(mapListModel);
    }

    private void setSelectedMap(MouseEvent evt) {
//        selectedMap=(MapModel) mapList.getSelectedValue();
//        floorNameTextField.setText(selectedMap.getFloorName());
//        mapTextField.setText(mapSourceFile.getAbsolutePath());
    }

    private void flushMapTextFields() {
        mapTextField.setText("");
    }

    private void saveScheduleTable(ActionEvent evt) {
        ScheduleTableModel model = (ScheduleTableModel) scheduleTable.getModel();
        scheduleModels=model.getList();
        SaveScheduleTable.saveScheduleTable(scheduleModels);
        showMessage("Saved");
    }

    

    private void initPatientListP() {
        initPatientList();
    }
    private ArrayList<PrescriptionModel> prescriptionArrayList;
    private PrescriptionListModel prescriptionListModel;

    private void selectPatientP(MouseEvent evt) {
        selectedPatient=(PatientModel) patientListP.getSelectedValue();
        prescriptionArrayList = GetPrescriptionList.getPrescriptionList(selectedPatient);
        prescriptionListModel =new PrescriptionListModel(prescriptionArrayList);
        prescriptionList.setModel(prescriptionListModel);
        
    }
    private PrescriptionModel selectedPrescriptionModel;
    private PrescriptionTableModel prescriptionTableModel;
    private void showPriscription(MouseEvent evt) {
        selectedPrescriptionModel=(PrescriptionModel) prescriptionList.getSelectedValue();
//        System.out.println(selectedPrescriptionModel.getPreid());
        prescriptionArrayList=GetPrescription.getPrescription(selectedPrescriptionModel);
        prescriptionTableModel=new PrescriptionTableModel(prescriptionArrayList);
        priscriptionTable.setModel(prescriptionTableModel);
    }
    private void addPrescription(ActionEvent evt) {
        selectedPatient=(PatientModel) patientListP.getSelectedValue();
        if(selectedPatient!=null)
        {
            AddPrescription.addPrescription(selectedPatient);
            prescriptionArrayList = GetPrescriptionList.getPrescriptionList(selectedPatient);
            prescriptionListModel=new PrescriptionListModel(prescriptionArrayList);
            prescriptionList.setModel(prescriptionListModel);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please Select Patient First.");
        }
    }

    private void addPriscriptionTable(ActionEvent evt) {
        prescriptionArrayList=prescriptionTableModel.getList();
        SavePrescriptionTable.saveScheduleTable(prescriptionArrayList,selectedPrescriptionModel);
    }

    private void setCentered() {
                Toolkit kit = getToolkit();
                GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
                GraphicsDevice[] gs = ge.getScreenDevices();
                Insets in = kit.getScreenInsets(gs[0].getDefaultConfiguration());

                Dimension d = kit.getScreenSize();
                int max_width = (d.width - in.left - in.right);
                int max_height = (d.height - in.top - in.bottom);
                setSize(Math.min(max_width, 2756), Math.min(max_height, 679));//whatever size you want but smaller the insets
                setLocation((int) (max_width - getWidth()) / 2, (int) (max_height - getHeight() ) / 2);
    }

    private void initLookAndFeel() {
       try{
        //UIManager.setLookAndFeel(ch.randelshofer.quaqua.QuaquaManager.getLookAndFeel());
        //UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
           UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
       }
       catch(Exception e)
       {
           e.printStackTrace();
       }
    }

    private static ThreadedNOTIFIER threadedNOTIFIER;
    private static ThreadedDB threadedDB;
    private JettyFromMain jettyFromMain;
    private boolean  flag =false;
    private void initServers() {
        threadedNOTIFIER = new ThreadedNOTIFIER("first");
        threadedDB = new ThreadedDB("secound");
        jettyFromMain=new JettyFromMain();
    }
    private boolean started=false;
    private void startServers(ActionEvent evt) {
        try {
           if(!started)
           {
                if(!flag)
                {
                    System.out.println("Starting first time... \n");
                    threadedNOTIFIER.start();
                    threadedDB.start();
                    flag=true;
                }
                else
                {
                    System.out.println("Starting Again... \n");
                    threadedNOTIFIER=new ThreadedNOTIFIER("first");
                    threadedNOTIFIER.start();
                    threadedDB=new ThreadedDB("secound");
                    threadedDB.start();

                }
                jettyFromMain.getJettyServer().start();
                started=true;
          }
           else
           {
               System.out.println("Already Started.");
           }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    private void stopServers() {
        try {
            if(started)
            {
                System.out.println("Stopping...");
                ThreadedDB.closeListener();
                threadedDB.stop();
                threadedDB= null;
                ThreadedNOTIFIER.closeListener();
                threadedNOTIFIER.stop();
                threadedNOTIFIER= null;
                jettyFromMain.getJettyServer().stop();
                started=false;
            }
        } catch (Exception e) {
//            e.printStackTrace();
        }


    }

    public static ThreadedDB getThreadedDB() {
        return threadedDB;
    }

    public static ThreadedNOTIFIER getThreadedNOTIFIER() {
        return threadedNOTIFIER;
    }
    
    private void redirectSystemStreams() {
  OutputStream out = new OutputStream() {
    @Override
    public void write(int b) throws IOException {
      updateTextArea(String.valueOf((char) b));
    }

    @Override
    public void write(byte[] b, int off, int len) throws IOException {
      updateTextArea(new String(b, off, len));
    }

    @Override
    public void write(byte[] b) throws IOException {
      write(b, 0, b.length);
    }
  };

  System.setOut(new PrintStream(out, true));
//  System.setErr(new PrintStream(out, true));
}
    private void updateTextArea(final String text) {
  SwingUtilities.invokeLater(new Runnable() {
    public void run() {
      consoleTextArea.append(text);
    }
  });
}

    private void sendMessege() {
        String text = messegeTextArea.getText();
        NotiConn.setS(text);
    }

    private void clearMessege() {
        NotiConn.setS("HI");
        messegeTextArea.setText("");
    }

    private void addRowToPrescriptionTable() {

            try {
            PrescriptionTableModel model = (PrescriptionTableModel) priscriptionTable.getModel();
            model.insertRow(Integer.parseInt(prescriptionAddRowTextField.getText()));
            ArrayList<PrescriptionModel> list = model.getList();
            PrescriptionTableModel model1=new PrescriptionTableModel(list);
            priscriptionTable.setModel(model1);
        } catch (Exception e) {
        }
    }

    private void addRowToScheduleTable() {
        try {
            ScheduleTableModel model = (ScheduleTableModel)scheduleTable.getModel();
        model.insertRow(Integer.parseInt(scheduleTableAddRowTextField.getText()));
        ArrayList<ScheduleModel> list = model.getList();
        ScheduleTableModel model1=new ScheduleTableModel(list);
        scheduleTable.setModel(model1);
        } catch (Exception e) {
        }
    }

    private void clearPrescriptiontable() {
        PrescriptionTableModel model = (PrescriptionTableModel) priscriptionTable.getModel();
        model.deleteAll();
        ArrayList<PrescriptionModel> list = model.getList();
        PrescriptionTableModel model1=new PrescriptionTableModel(list);
        priscriptionTable.setModel(model1);
    }

    private void clearScheduleTable() {
        ScheduleTableModel model = (ScheduleTableModel)scheduleTable.getModel();
        model.deleteAll();
        ArrayList<ScheduleModel> list = model.getList();
        ScheduleTableModel model1=new ScheduleTableModel(list);
        scheduleTable.setModel(model1);
    }

    private void initTools() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ToolsUI().setVisible(true);
            }
        });
    }
}
